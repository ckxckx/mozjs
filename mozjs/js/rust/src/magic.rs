//! Common traits and types for Magic DOM structs.

/// the proper name is the name of the struct generated by the MagicDom macro
#[macro_export]
macro_rules! magic_dom {
    (   $proper_name:ident,
        struct $name:ident {
            $(
                $field:ident : $field_ty:ty,
            )*
        }
    ) => {
        mod magic_dom_spec {
            #[allow(dead_code)]
            #[derive(MagicDom)]
            struct $name {
                $(
                    $field : $field_ty,
                )*
            }
        }
        pub use magic_dom_spec::$proper_name as $proper_name;
    }
}

#[macro_export]
macro_rules! get_js_val_number {
    ($val:ident, $cx:ident, $call_args:ident, $arg_idx:expr) => {
        let $val = match ToNumber($cx, $call_args.index($arg_idx)) {
            Ok(num) => num,
            Err(_) => {
                JS_ReportErrorASCII($cx, format!("Can't recognize arg {}", $arg_idx)
                                    .into_bytes().as_ptr() as *const libc::c_char);
                return false;
            },
        };
    }
}
